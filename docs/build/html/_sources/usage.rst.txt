Usage
=====

This section explains how to install, configure, and run **justdial-lead-generator**.

Installation
------------

Clone the repository and install dependencies:

.. code-block:: bash

   git clone https://github.com/yourusername/justdial-lead-generator.git
   cd justdial-lead-generator
   pip install -r requirements.txt

Alternatively, if packaged:

.. code-block:: bash

   pip install justdial-lead-generator

Basic Usage
-----------

The package is designed to scrape business listings from **JustDial** and export the results
to **Google Sheets** or local CSV files.

Run the scraper from the command line:

.. code-block:: bash

   python -m justdial_lead_generator.scraper.main --category "restaurants" --location "Delhi" --pages 5

This will:
  - Scrape restaurant listings from Delhi
  - Fetch up to 5 pages of results
  - Save structured data into a CSV file

Configuration
-------------

You can configure parameters either via CLI arguments or a configuration file.

**CLI Options**::

   --category        Business category to scrape (e.g. "restaurants", "salons")
   --location        City or area to search
   --pages           Number of pages to scrape
   --output          Output file path (default: results.csv)
   --export-sheets   Enable exporting to Google Sheets

Example:

.. code-block:: bash

   python -m justdial_lead_generator.scraper.main --category "salons" --location "Mumbai" --pages 10 --export-sheets

Google Sheets Integration
-------------------------

1. Enable the Google Sheets API in your Google Cloud Console.
2. Place the downloaded ``credentials.json`` in the project root.
3. Run with ``--export-sheets`` to push results directly into a spreadsheet.

.. note::
   The first run will prompt you to authorize the app in your browser.

Programmatic Usage
------------------

You can also use the scraper inside your Python code:

.. code-block:: python

   from justdial_lead_generator.scraper.justdial_scraper import JustDialScraper

   scraper = JustDialScraper(category="restaurants", location="Delhi", pages=2)
   results = scraper.run()

   for business in results:
       print(business["name"], business["phone"])

Output
------

- **CSV File** (default: ``results.csv``)
- **Google Sheet** (if ``--export-sheets`` is enabled)
- Data includes business name, address, contact details, ratings, and more.

